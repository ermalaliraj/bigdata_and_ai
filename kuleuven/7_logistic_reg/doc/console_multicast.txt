digits.images[0]: [[ 0.  0.  5. 13.  9.  1.  0.  0.]
 [ 0.  0. 13. 15. 10. 15.  5.  0.]
 [ 0.  3. 15.  2.  0. 11.  8.  0.]
 [ 0.  4. 12.  0.  0.  8.  8.  0.]
 [ 0.  5.  8.  0.  0.  9.  8.  0.]
 [ 0.  4. 11.  0.  1. 12.  7.  0.]
 [ 0.  2. 14.  5. 10. 12.  0.  0.]
 [ 0.  0.  6. 13. 10.  0.  0.  0.]]

digits.images[1]: [[ 0.  0.  0. 12. 13.  5.  0.  0.]
 [ 0.  0.  0. 11. 16.  9.  0.  0.]
 [ 0.  0.  3. 15. 16.  6.  0.  0.]
 [ 0.  7. 15. 16. 16.  2.  0.  0.]
 [ 0.  0.  1. 16. 16.  3.  0.  0.]
 [ 0.  0.  1. 16. 16.  6.  0.  0.]
 [ 0.  0.  1. 16. 16.  6.  0.  0.]
 [ 0.  0.  0. 11. 16. 10.  0.  0.]]

digits.images[2]: [[ 0.  0.  0.  4. 15. 12.  0.  0.]
 [ 0.  0.  3. 16. 15. 14.  0.  0.]
 [ 0.  0.  8. 13.  8. 16.  0.  0.]
 [ 0.  0.  1.  6. 15. 11.  0.  0.]
 [ 0.  1.  8. 13. 15.  1.  0.  0.]
 [ 0.  9. 16. 16.  5.  0.  0.  0.]
 [ 0.  3. 13. 16. 16. 11.  5.  0.]
 [ 0.  0.  0.  3. 11. 16.  9.  0.]]

digits.images[3]: [[ 0.  0.  7. 15. 13.  1.  0.  0.]
 [ 0.  8. 13.  6. 15.  4.  0.  0.]
 [ 0.  2.  1. 13. 13.  0.  0.  0.]
 [ 0.  0.  2. 15. 11.  1.  0.  0.]
 [ 0.  0.  0.  1. 12. 12.  1.  0.]
 [ 0.  0.  0.  0.  1. 10.  8.  0.]
 [ 0.  0.  8.  4.  5. 14.  9.  0.]
 [ 0.  0.  7. 13. 13.  9.  0.  0.]]

digits.images[4]: [[ 0.  0.  0.  1. 11.  0.  0.  0.]
 [ 0.  0.  0.  7.  8.  0.  0.  0.]
 [ 0.  0.  1. 13.  6.  2.  2.  0.]
 [ 0.  0.  7. 15.  0.  9.  8.  0.]
 [ 0.  5. 16. 10.  0. 16.  6.  0.]
 [ 0.  4. 15. 16. 13. 16.  1.  0.]
 [ 0.  0.  0.  3. 15. 10.  0.  0.]
 [ 0.  0.  0.  2. 16.  4.  0.  0.]]

dir(digits):  ['DESCR', 'data', 'feature_names', 'frame', 'images', 'target', 'target_names']
DESCR:  .. _digits_dataset: Optical recognition of handwritten digits dataset...
len(data):  1797
feature_names:  ['pixel_0_0', 'pixel_0_1', 'pixel_0_2', 'pixel_0_3', 'pixel_0_4', 'pixel_0_5', 'pixel_0_6', 'pixel_0_7', 'pixel_1_0', 'pixel_1_1', 'pixel_1_2', 'pixel_1_3', 'pixel_1_4', 'pixel_1_5', 'pixel_1_6', 'pixel_1_7', 'pixel_2_0', 'pixel_2_1', 'pixel_2_2', 'pixel_2_3', 'pixel_2_4', 'pixel_2_5', 'pixel_2_6', 'pixel_2_7', 'pixel_3_0', 'pixel_3_1', 'pixel_3_2', 'pixel_3_3', 'pixel_3_4', 'pixel_3_5', 'pixel_3_6', 'pixel_3_7', 'pixel_4_0', 'pixel_4_1', 'pixel_4_2', 'pixel_4_3', 'pixel_4_4', 'pixel_4_5', 'pixel_4_6', 'pixel_4_7', 'pixel_5_0', 'pixel_5_1', 'pixel_5_2', 'pixel_5_3', 'pixel_5_4', 'pixel_5_5', 'pixel_5_6', 'pixel_5_7', 'pixel_6_0', 'pixel_6_1', 'pixel_6_2', 'pixel_6_3', 'pixel_6_4', 'pixel_6_5', 'pixel_6_6', 'pixel_6_7', 'pixel_7_0', 'pixel_7_1', 'pixel_7_2', 'pixel_7_3', 'pixel_7_4', 'pixel_7_5', 'pixel_7_6', 'pixel_7_7']
frame:  None
len(images):  1797
target:  [0 1 2 ... 8 9 8]
len(target):  1797
target_names:  [0 1 2 3 4 5 6 7 8 9]

model.score(X_test, y_test):  0.9638888888888889
model.predict(digits.data[0:5]):  [0 1 2 3 4]

X_test to predict:
 [[ 0.  0.  0. ...  0.  0.  0.]
 [ 0.  0.  0. ... 13.  5.  0.]
 [ 0.  0.  4. ...  0.  0.  0.]
 ...
 [ 0.  0.  9. ... 16. 16.  3.]
 [ 0.  0.  1. ... 15.  2.  0.]
 [ 0.  0.  5. ...  5.  0.  0.]]
model.predict(X_test):
 [4 6 7 4 1 7 6 0 8 5 4 8 6 5 8 7 4 2 0 3 4 9 8 4 8 0 8 5 0 5 3 7 8 4 0 3 3
 8 2 9 7 3 5 7 5 3 6 2 0 2 8 2 7 4 4 1 1 9 1 5 9 7 6 8 9 2 5 6 3 9 4 2 4 2
 4 6 6 5 4 1 4 0 0 6 1 0 6 3 5 8 5 4 3 6 6 3 8 6 9 6 5 5 3 6 4 5 6 7 5 5 9
 1 6 5 7 0 1 3 0 8 7 8 2 1 8 8 9 0 5 8 4 1 7 2 0 9 9 6 6 3 6 2 7 6 4 5 1 9
 8 1 5 3 1 7 4 9 2 9 7 4 5 0 8 8 3 6 3 0 7 4 1 9 2 5 4 7 5 2 1 9 9 1 5 4 3
 4 6 3 4 9 7 5 0 6 0 4 2 3 7 5 8 8 3 0 3 0 3 4 8 2 5 5 0 7 6 5 9 1 7 7 1 0
 6 7 5 3 7 4 0 0 8 0 3 6 4 2 5 9 0 7 8 7 3 4 5 0 2 4 0 7 6 4 2 1 8 2 4 0 3
 3 6 6 6 4 3 3 3 0 8 9 1 0 6 3 8 1 8 5 3 6 0 7 9 4 8 6 1 6 2 4 6 6 9 3 6 7
 2 5 6 6 7 9 2 4 9 2 7 2 8 2 8 9 6 4 6 1 1 6 5 0 3 5 1 2 9 6 1 0 6 9 4 9 0
 6 9 9 6 8 8 9 7 3 7 0 8 7 2 3 1 4 9 2 7 1 5 1 1 2 9 0]

cm:
 [[36  0  0  0  0  1  0  0  0  0]
 [ 0 28  0  0  0  0  0  0  1  1]
 [ 0  0 30  0  0  0  0  0  0  0]
 [ 0  0  0 35  0  1  0  0  1  0]
 [ 0  1  0  0 39  0  0  0  0  0]
 [ 0  0  0  0  0 34  0  0  0  1]
 [ 0  1  0  0  0  0 47  0  1  0]
 [ 0  0  0  1  0  0  0 35  0  0]
 [ 0  0  0  0  1  0  0  0 32  1]
 [ 0  0  0  0  0  1  0  0  0 31]]

Process finished with exit code 0
